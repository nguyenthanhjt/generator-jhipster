// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generator - gradle:jib with gradle build tool should match files snapshot 1`] = `
{
  "build.gradle": {
    "contents": "
dependencies {
// trinity-needle-gradle-dependency
}
plugins {
id "jhipster.docker-conventions"
// trinity-needle-gradle-plugins
}
",
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "contents": "plugins {
    id 'groovy-gradle-plugin'
}

repositories {
    gradlePluginPortal()
}

dependencies {
    implementation libs.jib.plugin
    // trinity-needle-gradle-dependency - Trinity will add additional dependencies for convention plugins here
    // trinity-needle-gradle-build-src-dependency - Deprecated: Trinity will add additional dependencies for convention plugins here
}
",
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "contents": "[versions]
# trinity-needle-gradle-dependency-catalog-version - Trinity will add additional versions for convention plugins heref
# trinity-needle-gradle-build-src-dependency-catalog-version - Deprecated: Trinity will add additional versions for convention plugins here

[libraries]
jib-plugin = { module = "com.google.cloud.tools:jib-gradle-plugin", version = "'JIB-MAVEN-PLUGIN-VERSION'" }
# trinity-needle-gradle-dependency-catalog-libraries - Trinity will add additional libraries versions

[plugins]
# trinity-needle-gradle-dependency-catalog-plugins - Trinity will add additional plugins versions
",
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "contents": "plugins {
    id "com.google.cloud.tools.jib"
}

jib {
    from {
        image = "java-jre-placeholder"
        platforms {
            platform {
                architecture = "\${findProperty('jibArchitecture') ?: 'amd64'}"
                os = "linux"
            }
        }
    }
    to {
        image = "jhipster:latest"
    }
    container {
        entrypoint = ["bash", "-c", "/entrypoint.sh"]
        ports = ["8080"]
        environment = [
            SPRING_OUTPUT_ANSI_ENABLED: "ALWAYS",
            JHIPSTER_SLEEP: "0"
        ]
        creationTime = "USE_CURRENT_TIMESTAMP"
        user = 1000
    }
    extraDirectories {
      paths = file("src/main/docker/jib")
      permissions = ["/entrypoint.sh": "755"]
    }
}",
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "contents": "[versions]
# trinity-needle-gradle-dependency-catalog-version - Trinity will add additional versions for convention plugins heref

[libraries]
# trinity-needle-gradle-dependency-catalog-libraries - Trinity will add additional libraries versions

[plugins]
# trinity-needle-gradle-dependency-catalog-plugins - Trinity will add additional plugins versions
",
    "stateCleared": "modified",
  },
}
`;
